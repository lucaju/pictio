!function(e){function n(n){for(var a,i,r=n[0],c=n[1],u=n[2],d=0,b=[];d<r.length;d++)i=r[d],s[i]&&b.push(s[i][0]),s[i]=0;for(a in c)Object.prototype.hasOwnProperty.call(c,a)&&(e[a]=c[a]);for(l&&l(n);b.length;)b.shift()();return o.push.apply(o,u||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],a=!0,r=1;r<t.length;r++){var c=t[r];0!==s[c]&&(a=!1)}a&&(o.splice(n--,1),e=i(i.s=t[0]))}return e}var a={},s={0:0},o=[];function i(n){if(a[n])return a[n].exports;var t=a[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.m=e,i.c=a,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)i.d(t,a,function(n){return e[n]}.bind(null,a));return t},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="";var r=window.webpackJsonp=window.webpackJsonp||[],c=r.push.bind(r);r.push=n,r=r.slice();for(var u=0;u<r.length;u++)n(r[u]);var l=c;o.push([62,1]),t()}({29:function(e,n,t){var a=t(59);e.exports=function(){var e=new a.Template({code:function(e,n,t){var a=this;return a.b(t=t||""),a.b('<div id="card" class="uk-container uk-position-center uk-text-center">'),a.b("\n"+t),a.b('    <h1 id="title" class="uk-h1 '),a.b(a.v(a.f("inverseColour",e,n,0))),a.b('" data-i18n="challenges.challenges.'),a.b(a.v(a.f("short",e,n,0))),a.b('.name">Pict.io</h1>'),a.b("\n"+t),a.s(a.f("waiting",e,n,1),e,n,0,200,531,"{{ }}")&&(a.rs(e,n,function(e,n,a){a.b('    <h3 id="challenge" class="uk-h3 '),a.b(a.v(a.f("inverseColour",e,n,0))),a.b('">Card</h3>'),a.b("\n"+t),a.b('    <div class="sk-folding-cube">'),a.b("\n"+t),a.b('        <div class="sk-cube1 sk-cube background-yellow"></div>'),a.b("\n"+t),a.b('        <div class="sk-cube2 sk-cube background-yellow"></div>'),a.b("\n"+t),a.b('        <div class="sk-cube4 sk-cube"></div>'),a.b("\n"+t),a.b('        <div class="sk-cube3 sk-cube"></div>'),a.b("\n"+t),a.b("    </div>"),a.b("\n"+t)}),e.pop()),a.s(a.f("waiting",e,n,1),e,n,1,0,0,"")||(a.b('    <h3 id="challenge" class="uk-h3 '),a.b(a.v(a.f("inverseColour",e,n,0))),a.b('" data-i18n="challenges.challenges.'),a.b(a.v(a.f("short",e,n,0))),a.b('.name">'),a.b(a.v(a.f("name",e,n,0))),a.b("</h3>"),a.b("\n"),a.b("\n"+t),a.b('    <div class="uk-card uk-card-default uk-width-1-1@m uk-box-shadow-large uk-border-rounded">'),a.b("\n"+t),a.b('        <div class="uk-card-body uk-background-primary uk-box-shadow-large uk-light">'),a.b("\n"+t),a.b('            <h2 class="uk-h2" data-i18n="categories.'),a.b(a.v(a.f("categorySlug",e,n,0))),a.b('">'),a.b(a.v(a.f("drawCategory",e,n,0))),a.b("</h2>"),a.b("\n"+t),a.b('            <p id="clock" class="uk-text-small"><span uk-icon="future" class="uk-margin-small-right"></span><span'),a.b("\n"+t),a.b('                    id="time">'),a.b(a.v(a.f("time",e,n,0))),a.b("s</span></p>"),a.b("\n"+t),a.b("        </div>"),a.b("\n"+t),a.b('        <div class="uk-card-footer uk-box-shadow-large">'),a.b("\n"+t),a.b('            <button id="play" class="uk-button uk-button-text uk-button-large uk-border-rounded uk-width-1-1"'),a.b("\n"+t),a.b('                data-i18n="challenges.page.ready">'),a.b(a.v(a.f("ready",e,n,0))),a.b('<span uk-icon="chevron-right"'),a.b("\n"+t),a.b('                    class="uk-margin-small-left"></span></button>'),a.b("\n"+t),a.b('            <span id="guess"></span>'),a.b("\n"+t),a.b("        </div>"),a.b("\n"+t),a.b("    </div>"),a.b("\n"+t)),a.b("</div>"),a.fl()},partials:{},subs:{}},'<div id="card" class="uk-container uk-position-center uk-text-center">\n    <h1 id="title" class="uk-h1 {{inverseColour}}" data-i18n="challenges.challenges.{{short}}.name">Pict.io</h1>\n    {{#waiting}}\n    <h3 id="challenge" class="uk-h3 {{inverseColour}}">Card</h3>\n    <div class="sk-folding-cube">\n        <div class="sk-cube1 sk-cube background-yellow"></div>\n        <div class="sk-cube2 sk-cube background-yellow"></div>\n        <div class="sk-cube4 sk-cube"></div>\n        <div class="sk-cube3 sk-cube"></div>\n    </div>\n    {{/waiting}}\n    {{^waiting}}\n    <h3 id="challenge" class="uk-h3 {{inverseColour}}" data-i18n="challenges.challenges.{{short}}.name">{{name}}</h3>\n\n    <div class="uk-card uk-card-default uk-width-1-1@m uk-box-shadow-large uk-border-rounded">\n        <div class="uk-card-body uk-background-primary uk-box-shadow-large uk-light">\n            <h2 class="uk-h2" data-i18n="categories.{{categorySlug}}">{{drawCategory}}</h2>\n            <p id="clock" class="uk-text-small"><span uk-icon="future" class="uk-margin-small-right"></span><span\n                    id="time">{{time}}s</span></p>\n        </div>\n        <div class="uk-card-footer uk-box-shadow-large">\n            <button id="play" class="uk-button uk-button-text uk-button-large uk-border-rounded uk-width-1-1"\n                data-i18n="challenges.page.ready">{{ready}}<span uk-icon="chevron-right"\n                    class="uk-margin-small-left"></span></button>\n            <span id="guess"></span>\n        </div>\n    </div>\n    {{/waiting}}\n</div>',a);return e.render.apply(e,arguments)}},54:function(e,n){},58:function(e,n,t){},62:function(e,n,t){"use strict";t.r(n);var a=t(26),s=t.n(a),o=t(27),i=t.n(o),r=t(28),c=t.n(r),u=(t(57),t(58),t(0)),l=t.n(u),d=t(29),b=t.n(d);function k(e){const n=e;let t={};this.init=(()=>{}),this.update=(e=>{if(e||(e={action:"wait"}),"new"==e.action||"wait"==e.action){let n="new"!=e.action;(t=e).waiting=n;const a=b()(t);l()("#view").html(a),l()("#play").click(this,r),i()}else"updateGuess"==e.action?a(e):"updateTime"==e.action?s(e):"postGame"==e.action&&o(e)});const a=e=>{l()("#guess").html(e.guess)},s=e=>{l()("#time").html(`${e.time+1}s`)},o=e=>{l()("#time").html(""),l()("#guess").html(e.guess)},i=()=>{let e=l()("#challenge");e.css("opacity",0),e.css("marginTop",100);let n=l()(".uk-card"),t=n.height();n.css("height",0),n.css("opacity",0),e.animate({marginTop:0,opacity:1},1500),n.delay(1e3).animate({height:t,opacity:1},1500)},r=()=>{l()("#play").remove(),l()("#guess").html("..."),c({name:t.name,action:"play",room:n.socket.room,drawCategory:t.drawCategory})},c=({type:e="card",view:t="challenge",name:a="",action:s="play",room:o="",drawCategory:i=""})=>{n.socket.emit(e,{view:t,name:a,action:s,room:o,drawCategory:i})}}const h=new function(){this.socket=void 0;const e=new k(this);this.init=(()=>{i()(s.a),h.socket=c()(),h.socket.on("connected",()=>{}),h.socket.emit("cardAdded",{msg:"cardAdded",socketID:h.socket.id}),h.socket.on("roomJoined",e=>{console.log(e),h.socket.room=e.roomID,h.socket.emit("card",{component:"card",action:"start",room:e.roomID})}),h.socket.on("card",n),e.update()});const n=n=>{e.update(n)}};window.app=h,h.init()}});