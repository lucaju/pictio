!function(e){function i(i){for(var t,r,d=i[0],u=i[1],c=i[2],l=0,b=[];l<d.length;l++)r=d[l],s[r]&&b.push(s[r][0]),s[r]=0;for(t in u)Object.prototype.hasOwnProperty.call(u,t)&&(e[t]=u[t]);for(o&&o(i);b.length;)b.shift()();return a.push.apply(a,c||[]),n()}function n(){for(var e,i=0;i<a.length;i++){for(var n=a[i],t=!0,d=1;d<n.length;d++){var u=n[d];0!==s[u]&&(t=!1)}t&&(a.splice(i--,1),e=r(r.s=n[0]))}return e}var t={},s={0:0},a=[];function r(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,i,n){r.o(e,i)||Object.defineProperty(e,i,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,i){if(1&i&&(e=r(e)),8&i)return e;if(4&i&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&i&&"string"!=typeof e)for(var t in e)r.d(n,t,function(i){return e[i]}.bind(null,t));return n},r.n=function(e){var i=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(i,"a",i),i},r.o=function(e,i){return Object.prototype.hasOwnProperty.call(e,i)},r.p="";var d=window.webpackJsonp=window.webpackJsonp||[],u=d.push.bind(d);d.push=i,d=d.slice();for(var c=0;c<d.length;c++)i(d[c]);var o=u;a.push([91,1]),n()}({38:function(e,i,n){var t=n(12);e.exports=function(){var e=new t.Template({code:function(e,i,n){var t=this;return t.b(n=n||""),t.b('<div id="waiting" class="uk-margin-medium-top uk-text-center '),t.b(t.v(t.f("colourClass",e,i,0))),t.b('">'),t.b("\n"+n),t.b('\t<h3 class="uk-heading-line uk-text-uppercase"><span>Pict.io Dashboard</span></h3>'),t.b("\n"+n),t.b('\t<h3 id="status" class="uk-h3 uk-margin-large-bottom">'),t.b(t.v(t.f("status",e,i,0))),t.b("</h3>"),t.b("\n"+n),t.b('\t<div class="sk-folding-cube">'),t.b("\n"+n),t.b('\t\t<div class="sk-cube1 sk-cube background-yellow"></div>'),t.b("\n"+n),t.b('\t\t<div class="sk-cube2 sk-cube background-yellow"></div>'),t.b("\n"+n),t.b('\t\t<div class="sk-cube4 sk-cube"></div>'),t.b("\n"+n),t.b('\t\t<div class="sk-cube3 sk-cube"></div>'),t.b("\n"+n),t.b("\t</div>"),t.b("\n"+n),t.b("</div>"),t.fl()},partials:{},subs:{}},'<div id="waiting" class="uk-margin-medium-top uk-text-center {{colourClass}}">\n\t<h3 class="uk-heading-line uk-text-uppercase"><span>Pict.io Dashboard</span></h3>\n\t<h3 id="status" class="uk-h3 uk-margin-large-bottom">{{status}}</h3>\n\t<div class="sk-folding-cube">\n\t\t<div class="sk-cube1 sk-cube background-yellow"></div>\n\t\t<div class="sk-cube2 sk-cube background-yellow"></div>\n\t\t<div class="sk-cube4 sk-cube"></div>\n\t\t<div class="sk-cube3 sk-cube"></div>\n\t</div>\n</div>',t);return e.render.apply(e,arguments)}},39:function(e,i,n){var t=n(12);e.exports=function(){var e=new t.Template({code:function(e,i,n){var t=this;return t.b(n=n||""),t.b('<div id="waiting" class="uk-margin-medium-top uk-text-center">'),t.b("\n"+n),t.b('    <h3 class="uk-heading-line uk-text-uppercase uk-text-center '),t.b(t.v(t.f("colourClass",e,i,0))),t.b('"><span>Pict.io Dashboard</span></h3>'),t.b("\n"+n),t.b('    <button id="'),t.b(t.v(t.f("slug",e,i,0))),t.b('" class="uk-button uk-button-large uk-border-pill '),t.b(t.v(t.f("colour",e,i,0))),t.b(' uk-margin-small-right uk-margin-small-bottom uk-padding-small uk-width-1-1">'),t.b("\n"+n),t.b('        <span uk-icon="icon: user; ratio: 1.5"></span>'),t.b("\n"+n),t.b("        "),t.s(t.f("extraIcon",e,i,1),e,i,0,419,465,"{{ }}")&&(t.rs(e,i,function(e,i,n){n.b('<span uk-icon="icon: user; ratio: 1.5"></span>')}),e.pop()),t.b("\n"+n),t.b("        <br/>"),t.b(t.v(t.f("players",e,i,0))),t.b("\n"+n),t.b("    </button>"),t.b("\n"+n),t.b('    <h2 id="title" class="uk-h2">'),t.b(t.v(t.f("name",e,i,0))),t.b("</h2>"),t.b("\n"+n),t.b('    <div class="uk-margin-remove-top" uk-grid>'),t.b("\n"+n),t.b('        <div class="uk-width-expand"></div>'),t.b("\n"+n),t.b('        <div id="description" class="uk-width-2-3">'),t.b("\n"+n),t.b('            <div class="uk-margin-medium-bottom">'),t.b("\n"+n),t.b("                <p>"),t.b(t.v(t.f("description",e,i,0))),t.b("</p>"),t.b("\n"+n),t.b("            </div>"),t.b("\n"+n),t.b("            <div uk-grid>"),t.b("\n"+n),t.b('                <div class="uk-width-expand"></div>'),t.b("\n"+n),t.b('                    <div class="uk-card uk-card-default uk-width-2-3 uk-margin-small-left uk-padding-remove-left uk-box-shadow-large uk-border-rounded">'),t.b("\n"+n),t.b('                    <div class="uk-card-body uk-box-shadow-large">'),t.b("\n"+n),t.b('                        <h2 class="uk-h2">'),t.b(t.v(t.f("drawCategory",e,i,0))),t.b("</h2>"),t.b("\n"+n),t.b('                        <p class="uk-text-small"><span uk-icon="future" class="uk-margin-small-right"></span>'),t.b(t.v(t.f("time",e,i,0))),t.b("s</p>"),t.b("\n"+n),t.b("                    </div>"),t.b("\n"+n),t.b("                </div>"),t.b("\n"+n),t.b('                <div class="uk-width-expand"></div>'),t.b("\n"+n),t.b("            </div>"),t.b("\n"+n),t.b("        </div>"),t.b("\n"+n),t.b('        <div class="uk-width-expand"></div>'),t.b("\n"+n),t.b("    </div>"),t.b("\n"+n),t.b("</div>"),t.fl()},partials:{},subs:{}},'<div id="waiting" class="uk-margin-medium-top uk-text-center">\n    <h3 class="uk-heading-line uk-text-uppercase uk-text-center {{colourClass}}"><span>Pict.io Dashboard</span></h3>\n    <button id="{{slug}}" class="uk-button uk-button-large uk-border-pill {{colour}} uk-margin-small-right uk-margin-small-bottom uk-padding-small uk-width-1-1">\n        <span uk-icon="icon: user; ratio: 1.5"></span>\n        {{#extraIcon}}<span uk-icon="icon: user; ratio: 1.5"></span>{{/extraIcon}}\n        <br/>{{players}}\n    </button>\n    <h2 id="title" class="uk-h2">{{name}}</h2>\n    <div class="uk-margin-remove-top" uk-grid>\n        <div class="uk-width-expand"></div>\n        <div id="description" class="uk-width-2-3">\n            <div class="uk-margin-medium-bottom">\n                <p>{{description}}</p>\n            </div>\n            <div uk-grid>\n                <div class="uk-width-expand"></div>\n                    <div class="uk-card uk-card-default uk-width-2-3 uk-margin-small-left uk-padding-remove-left uk-box-shadow-large uk-border-rounded">\n                    <div class="uk-card-body uk-box-shadow-large">\n                        <h2 class="uk-h2">{{drawCategory}}</h2>\n                        <p class="uk-text-small"><span uk-icon="future" class="uk-margin-small-right"></span>{{time}}s</p>\n                    </div>\n                </div>\n                <div class="uk-width-expand"></div>\n            </div>\n        </div>\n        <div class="uk-width-expand"></div>\n    </div>\n</div>',t);return e.render.apply(e,arguments)}},40:function(e,i,n){var t=n(12);e.exports=function(){var e=new t.Template({code:function(e,i,n){var t=this;return t.b(n=n||""),t.b('<div id="game">'),t.b("\n"+n),t.b('    <div class="uk-margin-remove-top" uk-height-viewport>'),t.b("\n"+n),t.b('        <div class="uk-card uk-card-default uk-card-body uk-border-rounded uk-padding-remove uk-margin-remove uk-box-shadow-large bordered"'),t.b("\n"+n),t.b("            uk-height-viewport>"),t.b("\n"),t.b("\n"+n),t.b('            <canvas id="canvas" resize></canvas>'),t.b("\n"),t.b("\n"+n),t.b("        </div>"),t.b("\n"+n),t.b("    </div>"),t.b("\n"),t.b("\n"+n),t.b('    <div id="container-info">'),t.b("\n"+n),t.b('        <h3 class="uk-heading-line uk-text-uppercase uk-text-center '),t.b(t.v(t.f("colourClass",e,i,0))),t.b('"><span>Pict.io Dashboard</span></h3>'),t.b("\n"+n),t.b('        <h4 id="challenge" class="uk-h4 uk-text-center">'),t.b(t.v(t.f("challenge",e,i,0))),t.b("</h4>"),t.b("\n"+n),t.b("    </div>"),t.b("\n"+n),t.b('    <div id="container-progress">'),t.b("\n"+n),t.b('        <div id="progress"></div>'),t.b("\n"+n),t.b("    </div>"),t.b("\n"),t.b("\n"+n),t.b('    <div id="container-guess">'),t.b("\n"+n),t.b('        <h1 id="guess" class="uk-h1 uk-text-bold uk-text-muted uk-text-center"></h1>'),t.b("\n"+n),t.b("    </div>"),t.b("\n"),t.b("\n"+n),t.b("</div>"),t.fl()},partials:{},subs:{}},'<div id="game">\n    <div class="uk-margin-remove-top" uk-height-viewport>\n        <div class="uk-card uk-card-default uk-card-body uk-border-rounded uk-padding-remove uk-margin-remove uk-box-shadow-large bordered"\n            uk-height-viewport>\n\n            <canvas id="canvas" resize></canvas>\n\n        </div>\n    </div>\n\n    <div id="container-info">\n        <h3 class="uk-heading-line uk-text-uppercase uk-text-center {{colourClass}}"><span>Pict.io Dashboard</span></h3>\n        <h4 id="challenge" class="uk-h4 uk-text-center">{{challenge}}</h4>\n    </div>\n    <div id="container-progress">\n        <div id="progress"></div>\n    </div>\n\n    <div id="container-guess">\n        <h1 id="guess" class="uk-h1 uk-text-bold uk-text-muted uk-text-center"></h1>\n    </div>\n\n</div>',t);return e.render.apply(e,arguments)}},42:function(e,i,n){var t=n(12);e.exports=function(){var e=new t.Template({code:function(e,i,n){var t=this;return t.b(n=n||""),t.b('<div id="postgame" class="uk-container uk-container-small uk-position-center uk-text-center">'),t.b("\n"+n),t.b('    <div class="'),t.b(t.v(t.f("inverseColour",e,i,0))),t.b('">'),t.b("\n"+n),t.b('        <h1 class="uk-heading-primary" data-i18n="postgmame.status.'),t.b(t.v(t.f("success",e,i,0))),t.b('">'),t.b(t.v(t.f("status",e,i,0))),t.b("</h1>"),t.b("\n"+n),t.b("    </div>"),t.b("\n"),t.b("\n"+n),t.b('    <div class="uk-margin-medium-top" uk-grid>'),t.b("\n"),t.b("\n"+n),t.b('        <div class="uk-width-expand"></div>'),t.b("\n"+n),t.b('            <div class="uk-card uk-card-default uk-width-2-3 uk-margin-small-left uk-padding-remove-left uk-box-shadow-large uk-border-rounded">'),t.b("\n"+n),t.s(t.f("success",e,i,1),e,i,1,0,0,"")||(t.b('            <div class="uk-card-header">'),t.b("\n"+n),t.b('                <h4 class="uk-h4 uk-margin-remove-bottom" data-i18n="postgmame.supposedPhrase">'),t.b(t.v(t.f("supposedPhrase",e,i,0))),t.b("</h4>"),t.b("\n"+n),t.b("            </div>"),t.b("\n"+n)),t.b('            <div id="category" class="uk-card-body uk-background-primary uk-box-shadow-large uk-light">'),t.b("\n"+n),t.b('                <h2 class="uk-h2" data-i18n="categories.'),t.b(t.v(t.f("category",e,i,0))),t.b('">'),t.b(t.v(t.f("category",e,i,0))),t.b("</h2>"),t.b("\n"+n),t.b("            </div>"),t.b("\n"+n),t.b("        </div>"),t.b("\n"),t.b("\n"+n),t.b('        <div class="uk-width-expand"></div>'),t.b("\n"+n),t.b("    </div>"),t.b("\n"),t.b("\n"+n),t.b('    <div class="uk-margin-large-top '),t.b(t.v(t.f("inverseColour",e,i,0))),t.b('">'),t.b("\n"+n),t.b("        <div uk-grid>"),t.b("\n"+n),t.b('            <div class="uk-width-expand"></div>'),t.b("\n"+n),t.b('            <div class="uk-width-2-3">'),t.b("\n"+n),t.b('                <h3 class="uk-h3">'),t.b(t.v(t.f("bestGuessPhrase",e,i,0))),t.b("</h3>"),t.b("\n"+n),t.b('                <div class="tags"></div>'),t.b("\n"+n),t.b("            </div>"),t.b("\n"+n),t.b('            <div class="uk-width-expand"></div>'),t.b("\n"+n),t.b("        </div>"),t.b("\n"+n),t.b("    </div>"),t.b("\n"),t.b("\n"+n),t.b("</div>"),t.fl()},partials:{},subs:{}},'<div id="postgame" class="uk-container uk-container-small uk-position-center uk-text-center">\n    <div class="{{inverseColour}}">\n        <h1 class="uk-heading-primary" data-i18n="postgmame.status.{{success}}">{{status}}</h1>\n    </div>\n\n    <div class="uk-margin-medium-top" uk-grid>\n\n        <div class="uk-width-expand"></div>\n            <div class="uk-card uk-card-default uk-width-2-3 uk-margin-small-left uk-padding-remove-left uk-box-shadow-large uk-border-rounded">\n            {{^success}}\n            <div class="uk-card-header">\n                <h4 class="uk-h4 uk-margin-remove-bottom" data-i18n="postgmame.supposedPhrase">{{supposedPhrase}}</h4>\n            </div>\n            {{/success}}\n            <div id="category" class="uk-card-body uk-background-primary uk-box-shadow-large uk-light">\n                <h2 class="uk-h2" data-i18n="categories.{{category}}">{{category}}</h2>\n            </div>\n        </div>\n\n        <div class="uk-width-expand"></div>\n    </div>\n\n    <div class="uk-margin-large-top {{inverseColour}}">\n        <div uk-grid>\n            <div class="uk-width-expand"></div>\n            <div class="uk-width-2-3">\n                <h3 class="uk-h3">{{bestGuessPhrase}}</h3>\n                <div class="tags"></div>\n            </div>\n            <div class="uk-width-expand"></div>\n        </div>\n    </div>\n\n</div>',t);return e.render.apply(e,arguments)}},67:function(e,i){},90:function(e,i,n){},91:function(e,i,n){"use strict";n.r(i);var t=n(36),s=n.n(t),a=n(37),r=n.n(a),d=n(19),u=n.n(d),c=n(0),o=n.n(c),l=n(38),b=n.n(l);var h=new function(){let e;e=void 0,this.waitingData={status:"",colourClass:""},this.init=(i=>{e=i,this.update()}),this.update=function(e){e&&(this.waitingData.status=e.message);const n=b()(this.waitingData);o()("#view").html(n),i()};const i=()=>{1==e.interface.inverseClassToggle?o()("#waiting").addClass("uk-light",{duration:500}):o()("#title").removeClass("uk-light",{waiting:500})}},v=n(39),k=n.n(v);var g=new function(){this.init=(()=>{}),this.update=(i=>{1==i.players?(i.extraIcon=!1,i.players=`${i.players} Human Player`):(i.extraIcon=!0,i.players=`${i.players} Human Players`);const n=k()(i);o()("#view").html(n),e()});const e=()=>{let e=o()("#challenge");e.css("opacity",0),e.css("marginTop",100);let i=o()(".uk-card"),n=i.height();i.css("height",0),i.css("opacity",0),e.animate({marginTop:0,opacity:1},1500),i.delay(1e3).animate({height:n,opacity:1},1500)}},p=n(40),m=n.n(p),w=n(41),f=n.n(w);var x=new function(){let e,i=void 0,n=0;this.canvas="",this.canvasContext="",this.pageData={colourClass:""},this.init=((a,r)=>{e=a,this.pageData.colourClass=e.interface.inverseClass(),this.pageData.challenge=r.challenge;const d=m()(this.pageData);o()("#view").html(d),this.canvas=o()("canvas")[0],this.canvasContext=this.canvas.getContext("2d"),i=new f.a.SemiCircle("#progress",{strokeWidth:12,color:"#FFEA82",duration:1400,svgStyle:null,text:{value:"",alignToBottom:!0},from:{color:"#ED6A5A"},to:{color:"#FFEA82"},step:(e,i)=>{i.path.setAttribute("stroke",e.color),n+1===0?i.setText(""):i.setText(`${n+1}'`),i.text.style.color=e.color}}),window.addEventListener("resize",t,!1),t(),s()}),this.update=(()=>{}),this.draw=(e=>{let i=this.canvas.width,n=this.canvas.height;this.drawLine(e.x0*i,e.y0*n,e.x1*i,e.y1*n,e.color)}),this.drawLine=((e,i,n,t,s)=>{this.canvasContext.beginPath(),this.canvasContext.moveTo(e,i),this.canvasContext.lineTo(n,t),this.canvasContext.strokeStyle=s,this.canvasContext.lineWidth=2,this.canvasContext.stroke(),this.canvasContext.closePath()}),this.clear=(()=>{o()("#guess")[0].innerHTML="...",this.canvasContext.clearRect(0,0,this.canvas.width,this.canvas.height)}),this.guess=(e=>{o()("#guess")[0].innerHTML=e,o()("#container-guess").fadeIn("fast"),o()("#container-guess").fadeOut("slow")}),this.timer=(e=>{n=e.timer,i.set(e.timerPercentage/100)});const t=()=>{this.canvas&&(this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight)},s=()=>{let e=o()("#game");e.css("opacity",0),e.css("marginTop",100);let i=o()(".uk-card"),n=i.height();i.css("height",0),i.css("opacity",0),e.animate({marginTop:0,opacity:1},1500),i.delay(1e3).animate({height:n,opacity:1},1500)}},y=n(42),C=n.n(y);var V=new function(){this.init=(()=>{}),this.update=(e=>{const i=C()(e);o()(i).appendTo(o()("#view"));const n=o()("#view").find(".tags");for(let i of e.bestGuesses){const e=i.replace(/\s/g,"-").toLowerCase();n.append(`<span class="uk-label uk-label-primary" data-i18n="categories.${e}">${i}</span>\n`)}})};function T(e){const i=e;this.currentViewName="waiting",this.currentView="",this.inverseClassToggle=!1,this.classColor="",this.classBlend="",this.init=(()=>{this.currentViewName="waiting",this.changeView(this.currentViewName)}),this.changeView=((e,n)=>{o()("#view").empty(),this.currentViewName=e,"waiting"==e?this.currentView=h:"challenge"==e?this.currentView=g:"game"==e?this.currentView=x:"post-game"==e&&(this.currentView=V),this.currentView.init(i,n)}),this.updateView=(e=>{"partners"==e.view||"challenges"==e.view||"players"==e.view?("waiting"!=this.currentViewName&&this.changeView("waiting"),e.colour&&this.changeColour(e.colour)):"challenge"==e.view?this.changeView("challenge"):"game"==e.view?this.changeView("game",e):"post-game"==e.view?this.changeView("post-game"):"waiting"==e.view&&"waiting"!=this.currentViewName&&this.changeView("waiting"),this.currentView.update(e)}),this.updateGuess=(e=>{"game"==this.currentViewName&&("clear"==e.action?this.currentView.clear(e):this.currentView.guess(e.attempt))}),this.updateTimer=(e=>{"game"==this.currentViewName&&this.currentView.timer(e)}),this.draw=(e=>{"game"==this.currentViewName&&this.currentView.draw(e)}),this.inverseClass=(()=>this.inverseClassToggle?"uk-light":"uk-dark"),this.changeColour=(e=>{let i,n,t=this.classColor,s=this.classBlend;"light"==e?(this.inverseClassToggle=!1,i="uk-background-default",n="uk-background-blend-multiply"):"blue"==e?(this.inverseClassToggle=!0,i="uk-background-primary",n="uk-background-blend-multiply"):"dark"==e?(this.inverseClassToggle=!0,i="uk-background-secondary",n="uk-background-blend-color-burn"):"yellow"==e&&(this.inverseClassToggle=!1,i="background-yellow",n="uk-background-blend-multiply"),this.classColor=i,this.classBlend=n,o()("#view").switchClass(t,i,1e3,"easeInOutQuad"),s!=this.classBlend&&o()("#view").switchClass(s,this.classBlend,1e3,"easeInOutQuad")})}n(70);n(89),n(90);const P=new function(){this.socket=void 0,this.interface=new T(this),this.init=(()=>{r()(s.a),P.socket=u()(),P.socket=u()(),P.socket.on("connected",()=>{P.socket.emit("dashboardAdded",{msg:"dashboardAdded",socketID:P.socket.id})}),P.socket.on("interface",e),P.socket.on("drawing",i),P.socket.on("timer",t),P.socket.on("guess",n),P.interface.init(this)});const e=function(e){P.interface.updateView(e)},i=function(e){P.interface.draw(e)},n=function(e){P.interface.updateGuess(e)},t=function(e){P.interface.updateTimer(e)}};window.app=P,P.init()}});